@using MartManagement.WebApp.Models
@model LoginRegisterViewModel
@{
    ViewBag.Title = "Log in";
    Layout = null;
}
@if (!User.Identity.IsAuthenticated)
{
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Mart Management - Login</title>
        <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.14.0/css/all.min.css'>
        <link rel="stylesheet" href="~/Content/loginFormStyle.css">
        <style>
            .text-danger {
                color: red !important;
            }

            .btn-submit {
                margin-top: 10px;
            }

            .alert {
                position: relative;
                padding: .75rem 1.25rem;
                margin-bottom: 2rem;
                border: 1px solid transparent;
                border-radius: .25rem;
            }

            .alert-primary {
                color: #004085;
                background-color: #ccffe0;
                border-color: #9af3bd;
            }

            .validation-summary-errors {
                font-size: small !important;
            }

                .validation-summary-errors ul {
                    list-style: none;
                    text-align: left;
                    padding: 0;
                }
        </style>
    </head>
    <body>
        <!-- partial:index.partial.html -->
        <div class="@ViewBag.ActiveClass" id="container">
            <div class="form-container sign-up-container">
                @using (Html.BeginForm("Login", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <h1>Create Account</h1>
                    <hr />
                    @Html.ValidationSummary("", new { @class = "text-danger" })
                    <span>Use your email for registration</span>
                    @Html.TextBoxFor(m => m.RegisterViewModel.UserName, new { @type = "text", @placeholder = "Username" })
                    @Html.ValidationMessageFor(m => m.RegisterViewModel.UserName, "", new { @class = "text-danger" })
                    @Html.TextBoxFor(m => m.RegisterViewModel.Email, new { @type = "email", @placeholder = "Email" })
                    @Html.ValidationMessageFor(m => m.RegisterViewModel.Email, "", new { @class = "text-danger" })
                    @Html.PasswordFor(m => m.RegisterViewModel.Password, new { @type = "password", @placeholder = "Password" })
                    @Html.ValidationMessageFor(m => m.RegisterViewModel.Password, "", new { @class = "text-danger" })
                    @Html.PasswordFor(m => m.RegisterViewModel.ConfirmPassword, new { @type = "password", @placeholder = "Confirm Password" })
                    @Html.ValidationMessageFor(m => m.RegisterViewModel.ConfirmPassword, "", new { @class = "text-danger" })
                    <button type="submit" class="btn-submit">Sign Up</button>
                }
            </div>
            <div class="form-container sign-in-container">
                @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
                {
                    if (ViewBag.Message != null)
                    {
                        <span class="alert alert-primary" role="alert">
                            @Html.Raw(ViewBag.Message)
                        </span>
                    }
                    @Html.AntiForgeryToken()
                    <h1>Sign in</h1>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <span>Use a local account to log in.</span>
                    @Html.TextBoxFor(m => m.LoginViewModel.Email, new { @type = "email", @placeholder = "Email" })
                    @Html.ValidationMessageFor(m => m.LoginViewModel.Email, "", new { @class = "text-danger" })
                    @Html.PasswordFor(m => m.LoginViewModel.Password, new { @type = "password", @placeholder = "Password" })
                    @Html.ValidationMessageFor(m => m.LoginViewModel.Password, "", new { @class = "text-danger" })
                    <a href="#">Forgot your password?</a>
                    <button type="submit" class="btn-submit">Sign In</button>
                }
            </div>
            <div class="overlay-container">
                <div class="overlay">
                    <div class="overlay-panel overlay-left">
                        <h1>Welcome Back!</h1>
                        <p>To keep connected with us please login with your personal info</p>
                        <button class="ghost" id="signIn">Sign In</button>
                    </div>
                    <div class="overlay-panel overlay-right">
                        <h1>Hello, Friend!</h1>
                        <p>Enter your personal details and start journey with us</p>
                        <button class="ghost" id="signUp">Sign Up</button>
                    </div>
                </div>
            </div>
        </div>

        <footer>
        </footer>
        <!-- partial -->
        <script src="~/Content/loginFormScript.js"></script>

    </body>
</html>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
}
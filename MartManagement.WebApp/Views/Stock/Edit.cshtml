@model MartManagement.BOL.Stock

@{
    ViewBag.Title = "Edit";
}

@if (TempData["ErrorMsg"] != null)
{
    <br />
    <div class="alert alert-dismissable alert-danger">
        @TempData["ErrorMsg"].ToString() <p class="pull-right">&times;</p>
    </div>
}
<h2>Edit @ViewBag.ItemName</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal mb-3">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Stock_Id)

        <div class="form-group mb-3">
            @Html.LabelFor(model => model.Item_Id, "Item_Id", htmlAttributes: new { @class = "control-label col-md-2", @style = "width: fit-content;" })
            @Html.ValidationMessageFor(model => model.Item_Id, "", new { @class = "text-danger" })
            <div class="col-md-10">
                @Html.DropDownList("Item_Id", null, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group mb-3">
            @Html.LabelFor(model => model.Stock_Quantity, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: fit-content;" })
            @Html.ValidationMessageFor(model => model.Stock_Quantity, "", new { @class = "text-danger" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Stock_Quantity, new { htmlAttributes = new { @class = "form-control", onchange = "return GetCost(this)" } })
            </div>
        </div>

        <div class="form-group mb-3">
            @Html.LabelFor(model => model.Stock_RetailPrice, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: fit-content;" })
            @Html.ValidationMessageFor(model => model.Stock_RetailPrice, "", new { @class = "text-danger" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Stock_RetailPrice, new { htmlAttributes = new { @class = "form-control", onchange = "return GetCost(this)" } })
            </div>
        </div>

        <div class="form-group mb-3">
            @Html.LabelFor(model => model.Stock_TotalPrice, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: fit-content;" })
            @Html.ValidationMessageFor(model => model.Stock_TotalPrice, "", new { @class = "text-danger" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Stock_TotalPrice, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save Stock" class="btn btn-primary btn-sm" id="btnSubmit" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "List", null, htmlAttributes: new { @class = "btn btn-secondary btn-sm" })
</div>

@section Scripts {
    <script src="~/Scripts/Source.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
}
